apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: team-2048
  name: ingress-2048
  labels:
    app: app-2048
  annotations:
{{ if eq .Values.spec.ingress.type "nginx" }}
    kubernetes.io/ingress.class: "nginx"
{{ else }}
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  {{ if .Values.spec.ingress.host }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
  {{ else }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
  {{ end }}
    alb.ingress.kubernetes.io/tags: Environment={{ .Values.labels.env }},Team=Riker
{{ end }}
  {{ if .Values.spec.ingress.host }}
    external-dns.alpha.kubernetes.io/set-identifier: {{ .Values.spec.clusterName }}
    external-dns.alpha.kubernetes.io/aws-weight: '{{ .Values.spec.ingress.route53_weight }}'
    external-dns.alpha.kubernetes.io/ttl: "10"
  {{ end }}     
spec:
{{ if eq .Values.spec.ingress.type "nginx" }}
  kubernetes.io/ingress.class: "nginx"
{{ else }}
  ingressClassName: alb
{{ end }}
  rules:
{{ if .Values.spec.ingress.host }}
    - host: 2048.{{ .Values.spec.ingress.host }}
{{ else }}
    - host: 
{{ end }}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-2048
              port:
                number: 80